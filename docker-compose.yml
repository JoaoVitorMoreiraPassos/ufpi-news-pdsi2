networks:
  intra_net:
    driver: bridge
  external_net:
    driver: bridge

services:
  mysql:
    container_name: mysql
    image: mysql:8.0
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - intra_net

  postgres:
    container_name: postgres
    image: postgres:13
    restart: always

    env_file:
      - .env
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgres
    networks:
      - intra_net

  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - intra_net
    depends_on:
      - service1
      - service2

  service1:
    container_name: service1
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
    command: sh -c "python3 manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    environment:
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: "${POSTGRES_USER}"
      DB_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_NAME: "${POSTGRES_DB}"
    networks:
      - intra_net

  service2:
    container_name: service2
    build:
      context: ./backend
      dockerfile: Dockerfile

    volumes:
      - ./backend:/app
    depends_on:
      - postgres
    command: sh -c "python3 manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8001"
    env_file:
      - .env
    environment:
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: "${POSTGRES_USER}"
      DB_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_NAME: "${POSTGRES_DB}"
    networks:
      - intra_net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    command: sh -c "npm run build && npm start"
    depends_on:
      - nginx
    volumes:
      - ./frontend:/app
    env_file:
      - .env
    environment:
      REACT_APP_API_URL: "${REACT_APP_API_URL}"

volumes:
  postgres_data: {}
  mysql_data: {}
